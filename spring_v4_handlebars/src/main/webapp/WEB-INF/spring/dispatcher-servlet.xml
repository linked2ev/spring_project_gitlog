<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="
        		http://www.springframework.org/schema/beans 
        		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context-4.2.xsd
                http://www.springframework.org/schema/mvc 
                http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
    
	<!-- @Controller, @Component, @Repository, @Service 선언된 클래스를 빈으로 등록 -->
    <context:component-scan base-package="com,egovf">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
 
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="localeChangeInterceptor" />
            </list>
        </property>
    </bean>
    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
    <!-- 쿠키를 이용한 Locale 이용시 <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/> -->
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="language" />
    </bean>

	<!-- Jackson-->
	<!-- <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
		  <list>
			<ref bean="jsonHttpMessageConverter"/>
		  </list>
		</property>
	</bean> --> 
    
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>  <!-- JsonView: JsonView 스프링 설정 -->
	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>  <!-- beanNameViewResolver: JsonView을 인식하기 위해 설정  -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1"
	    p:viewClass="org.springframework.web.servlet.view.JstlView"
	    p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>
	<context:annotation-config/>
 
    <!-- @RequestMapping -->
    <mvc:annotation-driven> 
        <mvc:argument-resolvers>
            <bean class="com.cmmn.resolver.CustomMapArgumentResolver" />      
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    
    <!-- restful. 일반 Controller Annotation 사용시 -->
    <mvc:resources mapping="/bo/**" location="/bo/" />
     
    <mvc:interceptors>
        <bean class="com.cmmn.interceptor.LoggerInterceptor"></bean>
        <bean class="com.cmmn.interceptor.WebAccessInterceptor"></bean>
    </mvc:interceptors>
    
</beans>