package com.rdpanel.fo.ta.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.i18n.SessionLocaleResolver;

import com.rdpanel.cmmn.SurveyUtil;
import com.rdpanel.cmmn.security.SessionsPanel;
import com.rdpanel.cmmn.service.CmmnService;
import com.rdpanel.fo.mp.service.MyPageService;
import com.rdpanel.fo.ta.service.TestAnnounceService;
import com.webiz.util.PaginationInfo;
import com.webiz.util.StringUtil;

/**
* <pre>
* 1. 패키지명 : com.rdpanel.fo.ta.controller
* 2. 타입명 : TestAnnounceController.java
* 3. 작성일 : 2017. 9. 22.
* 4. 작성자 : JAMUGE
* 5. 설명 : 시험모집공고 Controller
* </pre>
 */
@Controller
public class TestAnnounceController {
	
	static final Logger logger = LoggerFactory.getLogger(TestAnnounceController.class);
	
	@Autowired SessionLocaleResolver localeResolver;

	@Autowired MessageSource messageSource;
	
    @Resource(name="cmmnService") 
    private CmmnService cmmnService;   
    
    @Resource(name="testAnnounceService") 
    private TestAnnounceService testAnnounceService;   
    
    @Resource(name="myPageService") 
    private MyPageService myPageService;   
    
    
    /**
    * <pre>
    * 1. 메소드명 : testAnnounceList
    * 2. 작성일 : 2017. 9. 22.
    * 3. 작성자 : JAMUGE
    * 4. 설명 : 시험모집공고 목록
    * </pre>
    * @param request
    * @param commandMap
    * @return
    * @throws Exception
     */
    @RequestMapping("/fo/ta/testAnnounceList.do")
	public ModelAndView testAnnounceList(HttpServletRequest request, @RequestParam Map<String, Object> commandMap) throws Exception {
		
		ModelAndView mv = new ModelAndView();
        
		//String [] COMM_CD = new String [] { Code.SURVEY_GBN, Code.TEST_PLAN, Code.VISIT_AREA};
        String [] COMM_CD = new String [] { "SURVEY_GBN", "TEST_PLAN", "VISIT_AREA" };
        
        // 코드 목록
        for(int i=0; i<COMM_CD.length; i++){
        	commandMap.put("COMM_CD", COMM_CD[i]);
        	mv.addObject(COMM_CD[i] +"_LIST", this.cmmnService.selectCmmnList(commandMap));
        }
        
        // 시험모집공고 목록 갯수
        int listCnt = this.testAnnounceService.selectTestAnnounceListCnt(request, commandMap);
        PaginationInfo paginationInfo = new PaginationInfo(listCnt, commandMap);
        mv.addObject("paginationInfo", paginationInfo);
        
        List<Map<String, Object>> list = null; 
        if (listCnt > 0){
        	
        	// 시험모집공고 목록
    		list = this.testAnnounceService.selectTestAnnounceList(request, commandMap);
        }
        
        mv.addObject("commandMap", commandMap);
        mv.addObject("listCnt", listCnt);
        mv.addObject("list", list);
		 
		return mv;
	}
    
    /**
    * <pre>
    * 1. 메소드명 : testAnnounceView
    * 2. 작성일 : 2017. 9. 27.
    * 3. 작성자 : JAMUGE
    * 4. 설명 : 시험모집공고 상세 보기
    * </pre>
    * @param request
    * @param commandMap
    * @return
    * @throws Exception
     */
    @RequestMapping("/fo/ta/testAnnounceView.do")
    public ModelAndView testAnnounceView(HttpServletRequest request, @RequestParam Map<String, Object> commandMap) throws Exception {
    	
    	ModelAndView mv = new ModelAndView();
    	
    	/* SESSION 확인 */
    	if(SessionsPanel.isLogin(request))
    	{
	    	/* EXAM_MNG_NO 확인 */
	    	if(!"".equals(StringUtil.getString(commandMap.get("EXAM_MNG_NO"), "")))
	    	{
	    		// returnUrl 목록에서 접근한 경우
	    	  	String refererUrl = StringUtil.getString(request.getHeader("referer"), "");
	    		if(!(refererUrl.indexOf("/fo/ta/testAnnounceApplicationStep1") > -1))
	    		{
	    			commandMap.put("refererUrl", StringUtil.getString(commandMap.get("refererUrl"), request.getHeader("referer")));
	    		}
	    		// 비로그인 링크로 접근한 경우
	    		if(refererUrl.indexOf("/fo/sc/loginProc") > -1)
	    		{
	    			commandMap.put("refererUrl", request.getAttribute("webRootDomain") + "/fo/mn/panelMainIndex.do");
	    		}
	    		
	    		// 시험모집 상세정보
	    		Map<String, Object> info = this.testAnnounceService.selectTestAnnounceView(request, commandMap);
	    		mv.addObject("info", info);
	
	    		// 시험방식 > 방문
	    		if("01".equals(commandMap.get("EXAM_WAY_CD")))
	    		{
	    			// 시험모집공고 상세 보기 > 방문 목록
	    			mv.addObject("visit_list", this.testAnnounceService.selectTestAnnounceVisitList(request, commandMap));
	    			
				// 시험방식 > 온라인 설문
	    		}
	    		else
	    		{
	    			// 시험모집공고 상세 보기 > 온라인 설문
	    			mv.addObject("online_list", this.testAnnounceService.selectTestAnnounceOnlineList(request, commandMap));
	    		} 
	    	}
	    	else
	    	{
	    		//mv.addObject("alertMsg", messageSource.getMessage("return.error.000", null, "비정상적인 접근입니다.", (Locale) request.getAttribute("LOCALE_LANG")));
	    		mv.addObject("alertMsg", "비정상적인 접근입니다.");
	            mv.addObject("returnUrl", StringUtil.getString(request.getHeader("referer"), request.getAttribute("webRootDomain") + "/fo/mn/panelMainIndex.do"));
	            mv.setViewName("/fo/common/result");
	    	}
    	}
    	else
    	{
    		//mv.addObject("alertMsg", messageSource.getMessage("return.error.001", null, "로그인 후 이용해주세요.", (Locale) request.getAttribute("LOCALE_LANG")));
    		mv.addObject("alertMsg", "로그인 후 이용해주세요.");
            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/sc/login.do");
            mv.setViewName("/fo/common/result");
    	}
    	
    	mv.addObject("commandMap", commandMap);
    	
    	return mv;
    }
    
    /**
    * <pre>
    * 1. 메소드명 : testAnnounceDelete
    * 2. 작성일 : 2017. 10. 16.
    * 3. 작성자 : JAMUGE
    * 4. 설명 : 시험신청 취소
    * </pre>
    * @param request
    * @param commandMap
    * @return
    * @throws Exception
     */
    @RequestMapping("/fo/ta/testAnnounceDelete.do")
	public ModelAndView testAnnounceDelete(HttpServletRequest request, @RequestParam Map<String, Object> commandMap) throws Exception {
		
		ModelAndView mv = new ModelAndView();
		
		int result = 0;
		
		if(!"".equals(StringUtil.getString(commandMap.get("EXAM_MNG_NO"), ""))){
			
			// 시험신청 취소(tb: 패널 현황)
			commandMap.put("FINISH_TYPE", "D");
			commandMap.put("EXAM_APP_YN", "N");
	    	result = this.testAnnounceService.updateTestAnnounce(request, commandMap);
	    	
	    	if(result > 0){
	    		
	    		// 설문조사 삭제
	    		this.testAnnounceService.deleteSurveyResearchDelete(request, commandMap);
	    	}
		}
		
		if(result > 0){
    		//mv.addObject("alertMsg", messageSource.getMessage("testAnnounce.000", null, "정상적으로 취소되었습니다.", (Locale) request.getAttribute("LOCALE_LANG")));
			mv.addObject("alertMsg", "정상적으로 취소되었습니다.");
            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/ta/testAnnounceList.do");
            mv.setViewName("/fo/common/result");
            
		}else{
    		//mv.addObject("alertMsg", messageSource.getMessage("testAnnounce.001", null, "신청취소에 실패하였습니다.", (Locale) request.getAttribute("LOCALE_LANG")));
    		mv.addObject("alertMsg", "신청취소에 실패하였습니다.");
            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/ta/testAnnounceList.do");
            mv.setViewName("/fo/common/result");
		}
    	
		mv.addObject("commandMap", commandMap);
		
		return mv;
	}
    
    /**
    * <pre>
    * 1. 메소드명 : testAnnounceApplicationStep1
    * 2. 작성일 : 2017. 10. 13.
    * 3. 작성자 : JAMUGE
    * 4. 설명 : 시험모집 참가신청 step1. 상세설문 작성
    * </pre>
    * @param request
    * @param commandMap
    * @return
    * @throws Exception
     */
    @RequestMapping("/fo/ta/testAnnounceApplicationStep1.do")
	public ModelAndView testAnnounceApplicationStep1(HttpServletRequest request, @RequestParam Map<String, Object> commandMap) throws Exception {
		
		ModelAndView mv = new ModelAndView();
		
		String answerTxt = "";
		
		/* 접근 URL 확인 */
    	String refererUrl = StringUtil.getString(request.getHeader("referer"), "");
		if(refererUrl.indexOf("/fo/ta/testAnnounceView") > -1 || refererUrl.indexOf("/fo/ta/testAnnounceApplicationStep2") > -1){
			
			/* EXAM_MNG_NO 확인 */
			if(!"".equals(StringUtil.getString(commandMap.get("EXAM_MNG_NO"), "")) ){
			
				//  참가신청 전 시험신청 가능 여부 확인
				Map<String, Object> appYn = this.testAnnounceService.selectAppAvailableYn(request, commandMap);
				logger.info(">> 시험신청 가능 여부 APP_YN : " + appYn.get("APP_YN"));
				
				if("Y".equals(StringUtil.getString(appYn.get("APP_YN"), ""))){

					/**** 상세 설문 서베이 세팅 *** */
			    	commandMap.put("PAST_EXAM_MNG_NO", commandMap.get("EXAM_MNG_NO"));
			    	commandMap.put("SURVEY_GBN", "03");
			    	commandMap.put("EXAM_ORDER", "1");
			 	 
			    	// 결과설문 > 결과테이블 정보(첨부파일)
		    		Map<String, Object> finishInfo = this.myPageService.selectResultSurveyFinishInfo(request, commandMap);
		    		System.out.println(">> finishInfo: " + finishInfo);
		    		mv.addObject("finishInfo", finishInfo);
		    		
			 	 	// 설문 질문 목록 조회
			 		List<Map<String, Object>> QueList = null;
			 		QueList = this.myPageService.getQuestionList(commandMap);
			 		
			 		// 설문 보기 목록 조회
			 		List<Map<String, Object>> ExamList = null;
			 		ExamList = this.myPageService.getAnswerList(commandMap);
			 		
			 		// 설문조사 생성
			 		String SurveyTxt = SurveyUtil.makeSurvey(QueList, ExamList);
			 		mv.addObject("detailSurveyTxt", SurveyTxt);
			 		/**** ********************* *** */
					
			 		// 상세설문 서베이가 있을 경우
			 		if(!"[]".equals(SurveyTxt))
			 		{
				 		/**** 답변 선택 서베이 세팅 *** */
						List<Map<String, Object>> AnswerList = null;
						AnswerList = this.myPageService.getAnswerChooseList(request, commandMap);
						
						SurveyUtil surveyUtil = new SurveyUtil();
						answerTxt = surveyUtil.makeAnswer(AnswerList);
	
						mv.addObject("answerTxt", answerTxt);
						System.out.println(">> answerTxt: " + answerTxt);
						/**** ********************* *** */
				 		
						// 상세설문 동의서
						mv.addObject("agreeInfo", this.testAnnounceService.selectDetailAgreeHtml(request, commandMap));
						
				 		mv.addObject("commandMap", commandMap);
			 		}
			 		// 상세설문 서베이가 없을 경우 > 기본정보 작성 step2로 이동한다.
			 		else
			 		{
			            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/ta/testAnnounceApplicationStep2.do");
			            mv.addObject("returnKey", "EXAM_MNG_NO");
			            mv.addObject("returnVal", commandMap.get("EXAM_MNG_NO"));
			            mv.addObject("returnKey1", "refererUrl");
			            mv.addObject("returnVal1", commandMap.get("refererUrl"));
			            mv.addObject("returnKey2", "STEP_TYPE");
			            mv.addObject("returnVal2", "STEP2");
			            mv.setViewName("/fo/common/result");
			 		}
				
				}else{
					mv.addObject("alertMsg", "해당은 시험은 이미 마감되었습니다.");
		            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/mn/panelMainIndex.do");
		            mv.setViewName("/fo/common/result");
				}
		 		
			}else{
				//mv.addObject("alertMsg", messageSource.getMessage("return.error.002", null, "데이터가 누락되었습니다.", (Locale) request.getAttribute("LOCALE_LANG")));
				mv.addObject("alertMsg", "데이터가 누락되었습니다.");
	            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/mn/panelMainIndex.do");
	            mv.setViewName("/fo/common/result");
			}
			
		}else{
    		//mv.addObject("alertMsg", messageSource.getMessage("return.error.000", null, "비정상적인 접근입니다.", (Locale) request.getAttribute("LOCALE_LANG")));
    		mv.addObject("alertMsg", "비정상적인 접근입니다.");
            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/mn/panelMainIndex.do");
            mv.setViewName("/fo/common/result");
		}
		
		return mv;
	}
    
    /**
    * <pre>
    * 1. 메소드명 : testAnnounceApplicationStep2
    * 2. 작성일 : 2017. 10. 13.
    * 3. 작성자 : JAMUGE
    * 4. 설명 : 시험모집 참가신청 step2. 개인정보 확인
    * </pre>
    * @param request
    * @param commandMap
    * @return
    * @throws Exception
     */
    @RequestMapping("/fo/ta/testAnnounceApplicationStep2.do")
    public ModelAndView testAnnounceApplicationStep2(HttpServletRequest request, @RequestParam Map<String, Object> commandMap) throws Exception {
    	
    	ModelAndView mv = new ModelAndView();
    	
    	String refererUrl = StringUtil.getString(request.getHeader("referer"), "");
		if(refererUrl.indexOf("/fo/ta/testAnnounceApplicationStep1") > -1){
	    	
			//commandMap.put("STEP_TYPE", commandMap.get("STEP_TYPE"));
			
	        String [] COMM_CD = new String [] { "PHONE1_CD", "EMAIL_CD"};
	        
	        // 코드 목록
	        for(int i=0; i<COMM_CD.length; i++){
	        	commandMap.put("COMM_CD", COMM_CD[i]);
	        	mv.addObject(COMM_CD[i] +"_LIST", this.cmmnService.selectCmmnList(commandMap));
	        }
	        mv.addObject("info", this.myPageService.selectMyInfo(request, commandMap));
	    	
		}else{
			//mv.addObject("alertMsg", messageSource.getMessage("return.error.000", null, "비정상적인 접근입니다.", (Locale) request.getAttribute("LOCALE_LANG")));
			mv.addObject("alertMsg", "비정상적인 접근입니다.");
            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/mn/panelMainIndex.do");
            mv.setViewName("/fo/common/result");
		}
    	
    	mv.addObject("commandMap", commandMap);
    	
    	return mv;
    }
    
    /**
    * <pre>
    * 1. 메소드명 : testAnnounceApplicationSave
    * 2. 작성일 : 2017. 10. 17.
    * 3. 작성자 : JAMUGE
    * 4. 설명 : 시험모집 참가신청 저장
    * </pre>
    * @param request
    * @param commandMap
    * @return
    * @throws Exception
     */
    @RequestMapping(value="/fo/ta/testAnnounceApplicationSave.do", method = RequestMethod.POST)
    public ModelAndView testAnnounceApplicationSave(HttpServletRequest request, @RequestParam Map<String, Object> commandMap) throws Exception {
    	
    	ModelAndView mv = new ModelAndView();
    	
		int result = 0;
		
		if(!"".equals(StringUtil.getString(commandMap.get("EXAM_MNG_NO"), ""))){
			
			// 참가신청 (tb: RDEI102DT)
			commandMap.put("EXAM_APP_YN", "Y");
	    	result = this.testAnnounceService.updateTestAnnounce(request, commandMap);
	    	
	    	if(result > 0){
	    		
		        /*  데이터 바인딩  */
		        String phone = (String)commandMap.get("PHONE1") + (String)commandMap.get("PHONE2") + (String)commandMap.get("PHONE3");
		        commandMap.put("PHONE", phone);
		        
		        // 개인정보 수정
		        result = this.testAnnounceService.updateMyInfo(request, commandMap);
	    	}
		}
		
		if(result > 0)
		{
			//mv.addObject("alertMsg", messageSource.getMessage("testAnnounce.002", null, "정상적으로 신청되었습니다.", (Locale) request.getAttribute("LOCALE_LANG")));
			mv.addObject("alertMsg", "정상적으로 신청되었습니다.");
            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/mp/testApplicationHistoryList.do");
            mv.setViewName("/fo/common/result");
		}
		else
		{
			//mv.addObject("alertMsg", messageSource.getMessage("testAnnounce.003", null, "참가신청에 실패하였습니다.", (Locale) request.getAttribute("LOCALE_LANG")));
			mv.addObject("alertMsg", "정상적으로 신청되었습니다.");
            mv.addObject("returnUrl", request.getAttribute("webRootDomain") + "/fo/ta/testAnnounceList.do");
            mv.setViewName("/fo/common/result");
		}
		
    	mv.addObject("commandMap", commandMap);
    	
    	return mv;
    }
    
}
