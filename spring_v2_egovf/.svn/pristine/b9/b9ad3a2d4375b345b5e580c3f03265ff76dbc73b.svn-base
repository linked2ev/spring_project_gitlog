package com.rdpanel.fo.mj.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.rdpanel.cmmn.FileUpload;
import com.rdpanel.cmmn.dao.ComnAbstractDAO;
import com.rdpanel.cmmn.dao.SMSAbstractDAO;
import com.rdpanel.cmmn.security.Panel;
import com.rdpanel.cmmn.security.SessionsPanel;
import com.rdpanel.fo.mj.service.MemberJoinService;
import com.webiz.util.StringUtil;

/**
* <pre>
* 1. 패키지명 : com.rdpanel.fo.mj.service.impl
* 2. 타입명 : MemberJoinServiceImpl.java
* 3. 작성일 : 2017. 10. 27.
* 4. 작성자 : JAMUGE
* 5. 설명 : 회원가입 ServiceImpl
* </pre>
 */
@Service("memberJoinService")
public class MemberJoinServiceImpl implements MemberJoinService {

	static final Logger logger = LoggerFactory.getLogger(MemberJoinService.class);
	
    @Resource(name="comnAbstractDAO") 
    private ComnAbstractDAO comnAbstractDAO;
    
    @Resource(name="smsAbstractDAO") 
    private SMSAbstractDAO smsAbstractDAO;

    /**
    * <pre>
    * 1. 메소드명 : selectMstPanelCnt
    * 2. 작성일 : 2017. 10. 30.
    * 3. 작성자 : JAMUGE
    * 4. 설명 : 마스터 패널 정보 조회
    * </pre>
    * @param request
    * @param panel
    * @return
    * @throws Exception
     */
	public int selectMstPanelCnt(HttpServletRequest request, Panel panel) throws Exception 
	{
		Map<String, Object> panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		panel.setUSER_ID(StringUtil.getString(panelInfo.get("SESSION_USER_ID"), ""));
		return (Integer) comnAbstractDAO.selectCount("MemberJoin.selectMstPanelCnt", panel);
	}
	
	/**
	* <pre>
	* 1. 메소드명 : selectMstMyInfo
	* 2. 작성일 : 2017. 10. 17.
	* 3. 작성자 : JAMUGE
	* 4. 설명 :  패널 상세정보
	* </pre>
	* @param commandMap
	* @return
	* @throws Exception
	 */
	@SuppressWarnings("unchecked")
	public Map<String, Object> selectPanelInfo(HttpServletRequest request, Panel panel) throws Exception 
	{
		Map<String, Object> panelInfo = null;
		if(SessionsPanel.isJoinMem(request)){
			panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		}else{
			panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_PANEL_INFO__");
		}
		panel.setUSER_ID(StringUtil.getString(panelInfo.get("SESSION_USER_ID"), ""));
		
		return (Map<String, Object>) comnAbstractDAO.select("MemberJoin.selectPanelInfo", panel);
	}
	
	/**
	* <pre>
	* 1. 메소드명 : insertMstMyInfo
	* 2. 작성일 : 2017. 10. 25.
	* 3. 작성자 : JAMUGE
	* 4. 설명 : 마스터 패널 정보 등록
	* </pre>
	* @param commandMap
	* @return
	* @throws Exception
	 */
	public int insertMstMyInfo(HttpServletRequest request, Panel panel) throws Exception 
	{
		Map<String, Object> panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		panel.setUSER_ID(StringUtil.getString(panelInfo.get("SESSION_USER_ID"), ""));
		panel.setUCSTMID(StringUtil.getString(panelInfo.get("SESSION_UCSTMID"), ""));
		
		return (Integer) comnAbstractDAO.insert("MemberJoin.insertMstMyInfo", panel);
	}
	
	/**
	* <pre>
	* 1. 메소드명 : panelId
	* 2. 작성일 : 2017. 12. 8.
	* 3. 작성자 : JAMUGE
	* 4. 설명 : 회원가입 > 사내 패널이 이메일 인증 후 사내 PERNR 조회
	* </pre>
	* @param request
	* @param commandMap
	* @return
	* @throws Exception
	 */
	@SuppressWarnings("unchecked")
	public Map<String, Object> selectCertPernrId(HttpServletRequest request, Map<String, Object> commandMap) throws Exception
	{
		return comnAbstractDAO.select("MemberJoin.selectCertPernrId", commandMap);
	}
	
	/**
	* <pre>
	* 1. 메소드명 : insertMyInfo
	* 2. 작성일 : 2017. 10. 25.
	* 3. 작성자 : JAMUGE
	* 4. 설명 : 회원가입 > 패널 정보 등록
	* </pre>
	* @param commandMap
	* @return
	* @throws Exception
	 */
	public int insertMyInfo(HttpServletRequest request, Panel panel) throws Exception 
	{
		return (Integer) comnAbstractDAO.insertObj("MemberJoin.insertMyInfo", panel);
	}
	
	/**
	* <pre>
	* 1. 메소드명 : updateMyInfo
	* 2. 작성일 : 2017. 11. 22.
	* 3. 작성자 : JAMUGE
	* 4. 설명 : 회원가입 > 패널 정보 수정
	* </pre>
	* @param request
	* @param panel
	* @return
	* @throws Exception
	 */
	public int updateMyInfo(HttpServletRequest request, Panel panel) throws Exception 
	{
		Map<String, Object> panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		panel.setUSER_ID(StringUtil.getString(panelInfo.get("SESSION_USER_ID"), ""));
		
		return (Integer) comnAbstractDAO.updateObj("MemberJoin.updateMyInfo", panel);
	}
	
	/**
	* <pre>
	* 1. 메소드명 : selectSurveyTablePanelIDCnt
	* 2. 작성일 : 2017. 10. 30.
	* 3. 작성자 : JAMUGE
	* 4. 설명 : 패널서베이 테이블에 패널 아이디 조회 (CNT)
	* </pre>
	* @param request
	* @param commandMap
	* @return
	* @throws Exception
	 */
	public int selectSurveyTablePanelIDCnt(HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
	{
		Map<String, Object> panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		commandMap.put("USER_ID", panelInfo.get("SESSION_USER_ID"));
		return (Integer) comnAbstractDAO.selectCount("MemberJoin.selectSurveyTablePanelIDCnt", commandMap);
	}
	
	/**
	 * <pre>
	 * 1. 메소드명 : insertPanelID
	 * 2. 작성일 : 2017. 10. 25.
	 * 3. 작성자 : JAMUGE
	 * 4. 설명 : 패널서베이 테이블에 패널 아이디 등록
	 * </pre>
	 * @param commandMap
	 * @return
	 * @throws Exception
	 */
	public int insertPanelID(HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
	{
		Map<String, Object> panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		commandMap.put("USER_ID", panelInfo.get("SESSION_USER_ID"));
		return comnAbstractDAO.insert("MemberJoin.insertPanelID", commandMap);
	}
	
	/**
    * <pre>
    * 1. 메소드명 : getQuestionList
    * 2. 작성일 : 2017. 10. 19.
    * 3. 작성자 : JeongHo
    * 4. 설명 : 회원가입 시 > 설문 질문 목록 조회(기초설문/팀별설문)
    * </pre>
    * @param commandMap
    * @return
    * @throws Exception
     */
	@SuppressWarnings("unchecked")
	public List<Map<String, Object>> getQuestionList(Map<String, Object> commandMap) throws Exception {
		return comnAbstractDAO.selectList("MemberJoin.getQuestionList", commandMap);
	}
	
	/**
    * <pre>
    * 1. 메소드명 : getAnswerList
    * 2. 작성일 : 2017. 10. 19.
    * 3. 작성자 : JeongHo
    * 4. 설명 : 회원가입 시 > 설문 보기 목록 조회(기초설문/팀별설문)
    * </pre>
    * @param commandMap
    * @return
    * @throws Exception
     */
	@SuppressWarnings("unchecked")
	public List<Map<String, Object>> getAnswerList(Map<String, Object> commandMap) throws Exception {
		return comnAbstractDAO.selectList("MemberJoin.getAnswerList", commandMap);
	}	
	
	/**
	* <pre>
	* 1. 메소드명 : getAnswerChooseList
	* 2. 작성일 : 2017. 10. 26.
	* 3. 작성자 : JAMUGE
	* 4. 설명 : 회원가입 시 > 설문 정답 선택한 목록 조회
	* </pre>
	* @param commandMap
	* @return
	* @throws Exception
	 */
	@SuppressWarnings("unchecked")
	public List<Map<String, Object>> getAnswerChooseList(HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
	{
		Map<String, Object> panelInfo = null;
		panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		commandMap.put("USER_ID", panelInfo.get("SESSION_USER_ID"));
		
		return comnAbstractDAO.selectList("MemberJoin.getAnswerChooseList", commandMap);
	}
	
	/**
	* <pre>
	* 1. 메소드명 : getAnswerChoosePageNum
	* 2. 작성일 : 2017. 12. 7.
	* 3. 작성자 : JAMUGE
	* 4. 설명 : 설문 정답 선택한 임시저장 마지막 페이지 넘버
	* </pre>
	* @param request
	* @param commandMap
	* @return
	* @throws Exception
	 */
	@SuppressWarnings("unchecked")
	public Map<String, Object> getAnswerChoosePageNum (HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
	{
		Map<String, Object> panelInfo = null;
		panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		commandMap.put("USER_ID", panelInfo.get("SESSION_USER_ID"));
		
		return comnAbstractDAO.select("MemberJoin.getAnswerChoosePageNum", commandMap);
	}
	
    /**
    * <pre>
    * 1. 메소드명 : insertSurveyResult
    * 2. 작성일 : 2017. 10. 24.
    * 3. 작성자 : JAMUGE
    * 4. 설명 : 회원가입 > 설문조사 등록
    * </pre>
    * @param commandMap
    * @return
    * @throws Exception
     */
	public int insertSurveyResult(HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
	{
		Map<String, Object> panelInfo = null;
		if(SessionsPanel.isJoinMem(request)){
			panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		}else{
			panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_PANEL_INFO__");
		}
		commandMap.put("USER_ID", panelInfo.get("SESSION_USER_ID"));
		
		int result = 0;
		
		/**
		 * 상세설문: 03/ 결과설문: 04
		 * 서베이 등록 후 
		 * COMPLETE 저장 일 경우 FINISH_YN: Y 등록
		 */
		if("DETAIL_TYPE".equals(StringUtil.getString(commandMap.get("EXAM_TYPE"), "")) || "RESULT_TYPE".equals(StringUtil.getString(commandMap.get("EXAM_TYPE"), "")))
		{
			// 201DT
			result = comnAbstractDAO.insert("MemberJoin.insertResultSurvey", commandMap);
			
			FileUpload fileUpload = new FileUpload();
			Map<String, Object> returnMap = fileUpload.FileUpload((MultipartHttpServletRequest) request, commandMap, commandMap.get("EXAM_TYPE").toString());
			
			returnMap.get("ORIGIN_FILE_NAME");
			returnMap.get("FILE_NAME");
			returnMap.get("FILE_TYPE");
			returnMap.get("SAVE_URL");
            
			commandMap.put("ORIGIN_FILE_NAME", returnMap.get("ORIGIN_FILE_NAME"));
			commandMap.put("FILE_NAME", returnMap.get("FILE_NAME"));
			commandMap.put("FILE_TYPE", returnMap.get("FILE_TYPE"));
			commandMap.put("SAVE_URL", returnMap.get("SAVE_URL"));
			
			// 서베이 등록 > FINSIH_YN FLAG 테이블 조회
			int rowCnt = comnAbstractDAO.selectCount("MemberJoin.selectResultFinishYnCnt", commandMap);
			if("COMPLETE".equals(StringUtil.getString(commandMap.get("SAVE_TYPE"), ""))){
				commandMap.put("FINISH_YN", "Y");
			}
			
			// 수정
			if(rowCnt > 0)
			{
				result = comnAbstractDAO.update("MemberJoin.updateResultFinishYn", commandMap);
			}
			// 등록
			else
			{
				result = comnAbstractDAO.insert("MemberJoin.insertResultFinishYn", commandMap);
			}
		}
		/**
		 * 선정설문: 05
		 */
		else if("CHO_TYPE".equals(StringUtil.getString(commandMap.get("EXAM_TYPE"), "")))
		{
			result = comnAbstractDAO.insert("MemberJoin.insertSelectionSurvey", commandMap);
			
			// 선정설문 작성 후 FLAG 수정
			if(result > 0)
			{
				result = comnAbstractDAO.update("MemberJoin.updateSelectionConsentYn", commandMap);
			}
		}
		/**
		 * 기초설문: 01 / 팀별설문: 02
		 */
		else
		{
			// 101DT
			result = comnAbstractDAO.insert("MemberJoin.insertSurveyResult", commandMap);
		}
		
		return result;
	}


	/**
	* <pre>
	* 1. 메소드명 : deleteSurveyResult
	* 2. 작성일 : 2017. 10. 27.
	* 3. 작성자 : JAMUGE
	* 4. 설명 : 회원가입 > 설문조사 삭제
	* </pre>
	* @param request
	* @param commandMap
	* @return
	* @throws Exception
	 */
	public int deleteSurveyResult(HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
	{
		Map<String, Object> panelInfo = null;
		if(SessionsPanel.isJoinMem(request)){
			panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_JOIN_MEM__");
		}else{
			panelInfo = SessionsPanel.getSessionMap(request, "__SESSION_PANEL_INFO__");
		}
		commandMap.put("USER_ID", panelInfo.get("SESSION_USER_ID"));
		
		int result = 0;
		
		/**
		 * 기초설문: 01 BASIC_TYPE - (RDSR101DT)
		 * 팀별설문: 02 TEAM_TYPE  - (RDSR101DT)
		 * 상세설문: 03 DETAIL_TYPE - (RDSR201DT)
		 * 결과설문: 04 RESULT_TYPE - (RDSR201DT)
		 * 선정설문: 05 CHO_TYPE - (RDSR201DT)
		 */
		
		if("DETAIL_TYPE".equals(StringUtil.getString(commandMap.get("EXAM_TYPE"), "")) || "RESULT_TYPE".equals(StringUtil.getString(commandMap.get("EXAM_TYPE"), "")) || "CHO_TYPE".equals(StringUtil.getString(commandMap.get("EXAM_TYPE"), "")))
		{
			result = comnAbstractDAO.delete("MemberJoin.deleteSurveyResult201", commandMap);
		}
		// 기초설문/팀별설문
		else
		{
			result = comnAbstractDAO.delete("MemberJoin.deleteSurveyResult101", commandMap);
		}
		
		return result;
	}
	
 	/**
 	* <pre>
 	* 1. 메소드명 : sendSmsMessage
 	* 2. 작성일 : 2017. 11. 8.
 	* 3. 작성자 : JAMUGE
 	* 4. 설명 : 회원가입 SMS 안내
 	* </pre>
 	* @param request
 	* @param commandMap
 	* @return
 	* @throws Exception
 	 */
 	public int sendSmsMessage(HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
 	{
 		Map<String,Object> teamTel = comnAbstractDAO.select("SMSManage.getTeamTel", commandMap);
 		commandMap.put("CALLBACK", teamTel.get("TEAM_TEL"));
 		
 		return smsAbstractDAO.insert("SMSManage.sendSmsJoinMessage", commandMap);
 	}
 	
 	/**
 	* <pre>
 	* 1. 메소드명 : sendLmsMessage
 	* 2. 작성일 : 2017. 11. 24.
 	* 3. 작성자 : JAMUGE
 	* 4. 설명 : 시험별 Q&A 답글 등록 성공 > 패널에게 SMS 전송
 	* </pre>
 	* @param commandMap
 	* @return
 	* @throws Exception
 	 */
 	public int sendLmsMessage(HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
 	{
 		Map<String,Object> teamTel = comnAbstractDAO.select("SMSManage.getTeamTel", commandMap);
 		commandMap.put("CALLBACK", teamTel.get("TEAM_TEL"));
 		
 		return smsAbstractDAO.insert("SMSManage.sendLmsJoinMessage", commandMap);
 	}
 	
 	/**
 	* <pre>
 	* 1. 메소드명 : insertSmsHistory
 	* 2. 작성일 : 2018. 2. 5.
 	* 3. 작성자 : JAMUGE
 	* 4. 설명 : SMS, Email 전송 이력
 	* </pre>
 	* @param request
 	* @param commandMap
 	* @return
 	* @throws Exception
 	 */
	public int insertSmsHistory(HttpServletRequest request, Map<String, Object> commandMap) throws Exception 
	{
		return comnAbstractDAO.insert("SMSManage.insertSmsHistory", commandMap);
	}

}
